entity shiftregistrer is

Port (s in STD_LOGIC_VECTOR (3 downto 0);

m: in STD_LOGIC_VECTOR (1 downto 0);

y: out STD_LOGIC_VECTOR (3 downto 0); clk in STD_LOGIC;

rst in STD_LOGIC);

end shiftregistrer;

architecture Behavioral of shiftregistrer is signal t: std_logic_vector(3 downto 0);

begin process (clk, rst)

begin

if rst='1' then

y<="0000";

elsif clk' event and clk ='1' then case m is

when "00" =>

t (3) <=s(0);

t (2) <=t (3);

t (1) <=t(2);

t (0) <=t(1);

y (0)<=t(0);

when "01" =>

t (3) <= s(0) ;

t ( 2 )<=t (3);t (1) <= t(2) ;t(0) <= t(1) ;y <= t

when prime prime 10 "=>

t <= s ;

y <= t ;

when " 11 "=>

t <= s<= s ;

t (2) <= t(3) ;

t (1) <= t(2) ;

t(0) <= t(1) ;

y(3) <= t(0) ;

when others => NULL;

end case;end if;end process;

end Behavioral;


TEST BENCH :

begin

--hold reset state for 100 ns.

rst<='1'; wait for 10 ns; rst<='0'; m<="00"; s<="0001"; wait for 80 ns; s<="1110"; s<="0000"; m<="01"; s<="0001"; wait for 80 ns; s<="1110"; s<="0000";

wait for 80 ns;

wait for 80 ns;

wait for 80 ns;

wait for 80 ns;

m<="10";

s<="0001";

wait for 80 ns;

5<="1110";

wait for 80 ns;

s<="0000"; wait for 80 ns;

m<="11"; s<= "0001"; wait for 80 ns; s<="1110"; wait for 80 ns; s<="0000"; wait for 80 ns;

--wait for clk period*10;

insert stimulus here

wait; end process;

END;